{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"middleware": {
		"scope": "javascript,typescript",
		"prefix": "mid",
		"body": [
			"function ${1:name}Handler(err,req,res,next)",
			"{",
			"   ${2:content}",
			"}",
		],
		"description": "Log output to console"
	},
	"middlewareLog": {
		"scope": "javascript,typescript",
		"prefix": "midlog",
		"body": [
			"function logErrors(err,req,res,next)",
			"{",
			"  console.log(err);",
			"  next(err);",
			"}",
		],
		"description": "Log output to console"
	},
	"middlewareError": {
		"scope": "javascript,typescript",
		"prefix": "miderr",
		"body": [
			"function errorHandler(err,req,res,next)",
			"{",
			"   res.status(${1:statusCode}).json({",
			"     message: err.message,",
			"     stack: err.stack",
			"   });",
			"}",
		],
		"description": "Log output to console"
	},
	"moduleExports": {
		"scope": "javascript,typescript",
		"prefix": "mdlexp",
		"body": [
			"module.exports = {${1:modules}};",
		],
		"description": "Log output to console"
	},
	"require": {
		"scope": "javascript,typescript",
		"prefix": "req",
		"body": [
			"const {${1:modules}} = require('${2:file}');",
		],
		"description": "Log output to console"
	},
	"app use": {
		"scope": "javascript,typescript",
		"prefix": "appuse",
		"body": [
			"app.use(${1:function})",
		],
		"description": "Log output to console"
	},
	"endpoint": {
		"scope": "javascript,typescript",
		"prefix": "endp",
		"body": [
			"${1:router}.${2:method}('${3:endpoint}', (req, res) => {",
			"    const { ${4:variable} } = req.${5:prop};",
			"    res.json({",
			"       'success': ${6:success},",
			"       'message': ${7:message},",
			"       'Data': {${8:data}}",
			"   });",
			"});",
		],
		"description": "Log output to console"
	},
	"express": {
		"scope": "javascript,typescript",
		"prefix": "exp",
		"body": [
			"const express= require('express');",
		],
		"description": "Log output to console"
	},
}
